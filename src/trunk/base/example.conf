# $Id$
# This is a sample configuration file for CoMo. 
# Blank lines and comments are ok and long lines can be split with a \
# at the end

# Edit this file to suit and save it as como.conf

# Directory where the output data of all modules reside. 
# This is mandatory. 
#
basedir     "/tmp/data"  

# Directory where the modules reside.
# This is mandatory. 
librarydir  "../modules"  

# Memory (in MBytes) allocated to the CAPTURE process 
# to maintain the state used by all modules. The more 
# modules, the more memory is needed. (Default: 64 MB)
#
#memsize	64  # in megabytes

# TCP Port number the QUERY process uses to accept new 
# requests from users. (Default: 44444)
#
#query-port	44444
 
# Node information. The following information is reported 
# by the node when it receives a ?status query. 
#
#name  		"CoMo Node"
#location 	"Unknown" 
#linkspeed 	"Unknown"
#comment	"None"


# Sniffer to be used (only one is supported at the moment) 
# The format is: 
#    sniffer <sniffer_type> <iface/filename> [<options>] 
#
# At least one sniffer is mandatory
#
#sniffer "libpcap" "eth0" "snaplen=112&promisc=1&timeout=1"
#sniffer "pcap"	"/path/to/pcap-file.dump"
#sniffer "sk98"	"sk0" 
#sniffer "bpf" "xl0" "snaplen=1500"
#sniffer "dag" "/dev/dag0" "slen=1536 varlen useISL"
#sniffer "erf" "/path/to/erf-file.dump"
#sniffer "dump"	"http://localhost:44444/?module=trace&format=dump&start=0"
#sniffer "flowtools" "/path/to/flow-tools/ft-*" "iface=57 scale=1000 stream"
#
sniffer	"bpf" "xl0"

# Log messages that are printed to stdout. 
# Valid keywords are 
#
#   ui:  	User Interface
#   warn: 	Warning messages
#   mem: 	Memory manager
#   conf:  	Configuration 
#   ca:  	CAPTURE process
#   ex:  	EXPORT process
#   st:  	STORAGE process
#   qu:  	QUERY process
#   sniff:  	Sniffers 
#   timer: 	Timers 
#   debug: 	Debugging messages
#   all:	All log messages
#
# the flag v- (or verbose-) can be added in front of any 
# keyword (e.g., v-warn) to request verbose logging. 
# (Default: warn,ui)
#
# logflags	warn,ui	

#
# Set the maximum size of each individual file in the
# stream for each module. Any denominator (KB,MB,GB) can be
# used, however filesize must be less than 1GB. (default: 128MB)
#
#filesize 128MB


# Modules. 
# This is an example with all keywords currently implemented. 
#
# module "example"
#
#   # mandatory entries 
#   source	"example.so"	# module shared object 
#   output	"example"	# output file
#
#   # optional entries 
#   description	"Example of module configuration"
#   filter      "tcp"	# select packets of interest (default: ALL)
#   streamsize	256MB		# max output file size (default: 256MB)
#   blocksize	1024		# maximum record size on file (default: 1024)
#   hashsize	1		# estimated concurrent entries (default: 1)
#   memsize	1024		# private memory in bytes (default: 0)
#   streamsize  10GB		# stream size on disk (default: 256MB)
#   args	"name = value"	# arguments to be passed to the module. 
#   min-flush	0		# capture flush intervals in ms. use with 
#   max-flush	1000		# caution! capture will respect them and if 
                                # not given enough flexibility may result in
				# shutting down the module or using up all 
				# memory. (default: min 0, max 1000)
# end

#
# Syntax of the filter for a module:
#
# The following expressions can be combined with
# "not", "and", "or" keywords and parenthesis:
#
# - protocol:
#       ip/tcp/udp/icmp
# - ip address and netmask:
#       src/dst xxx.xxx.xxx.xxx (only dots and numbers: host IP)
#       src/dst xxx.xxx.xxx.xxx/yy (dots and numbers/CIDR notation)
# - port: 
#       sport/dport xxxxx (just 1 port)
#       sport/dport xxxxx:yyyyy (a set of ports)
#
# The "all" keyword can also be used to specify an all-pass filter.
#
# Examples:
#
#   filter  "all"
#   filter  "ip"
#   filter  "tcp"
#   filter  "src 192.168.1.0/24 and dst 192.168.1.1"
#   filter  "tcp and src 10.213.54.6 and sport 5000:6000"
#   filter  "udp and (not(sport 21) or src 64.32.234.9/31)"
#

module "trace"
    description "Packet trace"
    filter      "all"
    output      "trace"
    source      "trace.so"
    hashsize    1
    blocksize   2048
    streamsize  1GB
    priority    0
end

#module "netflow"
#    description "Netflow v5"
#    filter	"all"
#    output	"netflow"
#    source	"netflow.so"
#    hashsize	1027
#    blocksize	32768
#end

#module "netflow-anon"
#    min-flush   300000
#    max-flush   300000
#    hashsize    100000
#end

module "counter"
    description "Packet/Bytes counter"
    filter 	"all"
    output 	"counter"
    source	"counter.so"
    hashsize    1      
    blocksize   1024
    min-flush	1000
    max-flush	1000
    args	"granularity = 1"		# measurement interval (secs)
end

module "application"
    description "Application Breakdown (using port numbers)"
    filter	"tcp"
    output	"apps"
    source	"application.so"
    hashsize	1
    blocksize	1024
    min-flush	5000
    max-flush	5000
    args	"granularity = 5"		# measurement interval (secs)
end
    
module "protocol"
    description "Protocol Breakdown"
    filter	"ip"
    output	"proto"
    source	"protocol.so"
    hashsize	256
    blocksize	8192
    min-flush	1000
    max-flush	1000
end
    
#module "protocolv6"
#    description "Protocol Breakdown for IPv6 packets"
#    filter	"isIPv6"
#    output	"protov6"
#    source	"protocolv6.so"
#    hashsize	256
#    blocksize	1024
#    min-flush	1000
#    max-flush	1000
#end

module "topdest"
    description "Top-10 IP destinations in bytes"
    filter      "ip"
    output	"top10"
    source	"topdest.so"
    hashsize    100000
    blocksize   1024
end

module "tuple"
    description "Active flows (5 tuple)"
    filter      "ip" 
    output	"tuple"
    source	"tuple.so"
    hashsize	100000
    blocksize   1024
    min-flush   1000 
    max-flush   1000 
end

module "connx"
    description "Active flows (5 tuple, with idle timeout)"
    filter      "ip" 
    output	"connx"
    source	"connx.so"
    hashsize	100000
    blocksize  1024
    args	"idle-timeout=60"	# flow termination timeout
end

module "utilization"
    description "Utilization and High Watermark (100ms)" 
    filter      "all" 
    output	"utilization"
    source	"utilization.so"
    hashsize	1
    blocksize   1024
end

#module "snort"
#    description "Interprets and runs Snort rules"
#    filter      "ip"
#    output      "snort"
#    source      "snort.so"
#    hashsize    1
#    blocksize   1590 # Ethernet MTU + sizeof(pktinfo_t)
#    streamsize  1GB
#    memsize     20000000
#    # Path of the file that contains the rules
#    args        "$../modules/snort.rules"
#end

